plugins {
    id "groovy"
    id "jacoco"
    id "com.gradle.plugin-publish" version "0.10.0"
    id "java-gradle-plugin"
}

version = System.getenv('TRAVIS_TAG') ? version : version + "-SNAPSHOT"

repositories {
    jcenter()
}

dependencies {
    implementation gradleApi()

    implementation "org.slf4j:slf4j-api:1.7.16"
    implementation "org.codehaus.groovy.modules.http-builder:http-builder:0.7"
    implementation "org.apache.maven:maven-artifact:3.3.3"

    testImplementation localGroovy() //Groovy packaged with gradle distro
    testImplementation('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation gradleTestKit()
}

configurations {
    integrationTestCompile.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime

    functionalTestCompile.extendsFrom testImplementation
    functionalTestRuntime.extendsFrom testRuntime
}

test {
    testLogging {
        showStandardStreams = true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = "sources"
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
  classifier = "javadoc"
  from groovydoc.destinationDir
}

groovydoc {
  // tell groovydoc to create links to Java/Groovy/Gradle docs instead of just printing names
  link ("https://docs.oracle.com/javase/${JavaVersion.toVersion(project.targetCompatibility).majorVersion}/docs/api/", "java.", "javax.")
  link ("http://docs.groovy-lang.org/${GroovySystem.version}/html/api/", "groovy.", "org.codehaus.groovy.")
  link ("https://docs.gradle.org/${project.getGradle().getGradleVersion()}/javadoc/", "org.gradle.")

  // these docs are more for plugin developers than end-users, so include everything
  includePrivate = true
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

gradlePlugin {
    plugins {
        sonarPlugin {
            id = 'com.usaa.sonar-quality-gates'
            implementationClass = 'com.usaa.plugin.gradle.sonarqube.SonarqubeQualityGatePlugin'
        }
    }
}

pluginBundle {
    website = 'https://usaa.github.io/sonar-quality-gates'
    vcsUrl = 'https://www.github.com/usaa/sonar-quality-gates'
    description = 'Sonar quality gate/profile administration and gate verification.'
    tags = ['sonar', 'admin', 'gate', 'quality-gate']

    plugins {
        sonarPlugin {
            displayName = 'Sonar Quality Gate Plugin'
        }
    }
}

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
    functionalTest {
        groovy.srcDir file('src/functTest/groovy')
        resources.srcDir file('src/functTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
    test {
        testLogging {
            showStandardStreams = true
        }
    }
}
